import{r as e,c as t,a as n,b as a,F as c,d as o,e as p,o as l}from"./app.90fa381f.js";import{_ as r}from"./plugin-vue_export-helper.5a098b48.js";const u={},i=o(`<h1 id="\u6811\u7684\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u4E0E\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u6811\u7684\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u4E0E\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22" aria-hidden="true">#</a> \u6811\u7684\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u4E0E\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22</h1><p>\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\uFF08BFS\uFF09\u548C\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF08DFS\uFF09\u662F\u8BA1\u7B97\u673A\u79D1\u5B66\u548C\u6570\u636E\u5206\u6790\u4E2D\u4F7F\u7528\u7684\u4E24\u79CD\u57FA\u672C\u7B97\u6CD5\uFF0C\u7528\u4E8E\u904D\u5386\u548C\u641C\u7D22\u56FE\u3001\u6811\u7B49\u6570\u636E\u7ED3\u6784\u3002</p><p>\u8FD9\u4E9B\u7B97\u6CD5\u53EF\u4EE5\u5E94\u7528\u4E8E\u8BB8\u591A\u95EE\u9898\uFF0C\u4F8B\u5982\u627E\u5230\u4E24\u70B9\u4E4B\u95F4\u7684\u6700\u77ED\u8DEF\u5F84\uFF0C\u68C0\u67E5\u56FE\u4E2D\u7684\u5FAA\u73AF\uFF0C\u6216\u641C\u7D22\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u7279\u5B9A\u5143\u7D20\u3002</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>        1
      /   \\
     2     3
    / \\   / \\
   4   5 6   7
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4EE5\u4E0A\u7ED3\u6784\uFF0C<code>javascript</code> \u4EE3\u7801\u8868\u8FBE\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> tree <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        id<span class="token operator">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            id<span class="token operator">:</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            id<span class="token operator">:</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        id<span class="token operator">:</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            id<span class="token operator">:</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            id<span class="token operator">:</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="\u6DF1\u5EA6\u4F18\u5148\u904D\u5386-depth-first-search-dfs" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5EA6\u4F18\u5148\u904D\u5386-depth-first-search-dfs" aria-hidden="true">#</a> \u6DF1\u5EA6\u4F18\u5148\u904D\u5386\uFF08Depth-First Search, DFS\uFF09</h2><p>\u9012\u5F52\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  tree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> <span class="token function">dfs</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">,</span> func<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5FAA\u73AF\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> node<span class="token punctuation">,</span> curTree <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>tree<span class="token punctuation">]</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>node <span class="token operator">=</span> curTree<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> curTree<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token operator">...</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">dfs</span><span class="token punctuation">(</span>tree<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 1, 2, 4, 5, 3, 6, 7</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u5E7F\u5EA6\u4F18\u5148\u904D\u5386-breadth-first-search-bfs" tabindex="-1"><a class="header-anchor" href="#\u5E7F\u5EA6\u4F18\u5148\u904D\u5386-breadth-first-search-bfs" aria-hidden="true">#</a> \u5E7F\u5EA6\u4F18\u5148\u904D\u5386\uFF08Breadth-First Search, BFS\uFF09</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token parameter">tree<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> node<span class="token punctuation">,</span> curTree <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>tree<span class="token punctuation">]</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>node <span class="token operator">=</span> curTree<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">func</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
    node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> curTree<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>node<span class="token punctuation">.</span>children<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">bfs</span><span class="token punctuation">(</span>tree<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 1, 2, 3, 4, 5, 6, 7</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> Ref</h2>`,18),k={href:"https://blog.csdn.net/w544924116/article/details/119712713",target:"_blank",rel:"noopener noreferrer"},b=p("JS\u6811\u5F62\u6570\u636E\u7ED3\u6784\u904D\u5386--\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u548C\u5E7F\u5EA6\u4F18\u5148\u904D\u5386_js\u6811\u72B6\u7ED3\u6784\u5982\u4F55\u904D\u5386\u6548\u7387\u66F4\u9AD8-CSDN\u535A\u5BA2"),d={href:"https://hackernoon.com/a-beginners-guide-to-bfs-and-dfs-in-javascript",target:"_blank",rel:"noopener noreferrer"},m=p("A Beginner's Guide to BFS and DFS in JavaScript | HackerNoon"),h={href:"https://javascript.plainenglish.io/javascript-algorithms-binary-tree-traversal-bfs-dfs-dc9801cba8cb",target:"_blank",rel:"noopener noreferrer"},f=p("JavaScript Algorithms: Binary Tree Traversal(BFS, DFS) | by Roman Melnik | JavaScript in Plain English"),g={href:"https://fireship.io/courses/javascript/interview-graphs/",target:"_blank",rel:"noopener noreferrer"},v=p("Graph Traversal");function _(j,x){const s=e("OutboundLink");return l(),t(c,null,[i,n("ul",null,[n("li",null,[n("a",k,[b,a(s)])]),n("li",null,[n("a",d,[m,a(s)])]),n("li",null,[n("a",h,[f,a(s)])]),n("li",null,[n("a",g,[v,a(s)])])])],64)}var F=r(u,[["render",_]]);export{F as default};
