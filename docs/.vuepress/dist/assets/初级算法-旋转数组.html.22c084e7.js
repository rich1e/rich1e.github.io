import{r as a,c as p,a as n,b as e,F as t,d as o,e as c,o as l}from"./app.b2197ab8.js";import{_ as u}from"./plugin-vue_export-helper.5a098b48.js";const r={},i=o(`<h1 id="\u521D\u7EA7\u7B97\u6CD5-\u65CB\u8F6C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u521D\u7EA7\u7B97\u6CD5-\u65CB\u8F6C\u6570\u7EC4" aria-hidden="true">#</a> \u521D\u7EA7\u7B97\u6CD5 - \u65CB\u8F6C\u6570\u7EC4</h1><p>\u7ED9\u4F60\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5C06\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u5411\u53F3\u8F6E\u8F6C <code>k</code> \u4E2A\u4F4D\u7F6E\uFF0C\u5176\u4E2D <code>k</code> \u662F\u975E\u8D1F\u6570\u3002</p><p>\u793A\u4F8B 1:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\u8F93\u5165: nums = [1,2,3,4,5,6,7], k = 3
\u8F93\u51FA: [5,6,7,1,2,3,4]
\u89E3\u91CA:
\u5411\u53F3\u8F6E\u8F6C 1 \u6B65: [7,1,2,3,4,5,6]
\u5411\u53F3\u8F6E\u8F6C 2 \u6B65: [6,7,1,2,3,4,5]
\u5411\u53F3\u8F6E\u8F6C 3 \u6B65: [5,6,7,1,2,3,4]
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u793A\u4F8B \xA02:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\u8F93\u5165\uFF1Anums = [-1,-100,3,99], k = 2
\u8F93\u51FA\uFF1A[3,99,-1,-100]
\u89E3\u91CA:
\u5411\u53F3\u8F6E\u8F6C 1 \u6B65: [99,-1,-100,3]
\u5411\u53F3\u8F6E\u8F6C 2 \u6B65: [3,99,-1,-100]
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FDB\u9636\uFF1A</p><ul><li>\u5C3D\u53EF\u80FD\u60F3\u51FA\u66F4\u591A\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u81F3\u5C11\u6709<strong>\u4E09\u79CD</strong>\u4E0D\u540C\u7684\u65B9\u6CD5\u53EF\u4EE5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002</li><li>\u4F60\u53EF\u4EE5\u4F7F\u7528\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A <code>O(1)</code> \u7684\u539F\u5730\u7B97\u6CD5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u5417\uFF1F</li></ul><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><ol><li><p>\u4F7F\u7528\u4E34\u65F6\u6570\u7EC4\uFF0C\u5C06\u6BCF\u4E2A\u5143\u7D20\u653E\u81F3\u6B63\u786E\u7684\u4F4D\u7F6E\u3002 <code>len</code> \u8868\u793A\u539F\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u539F\u6570\u7EC4\u4E0B\u6807\u4E3A <code>i</code> \u7684\u5143\u7D20\u653E\u81F3\u65B0\u6570\u7EC4\u4E0B\u6807\u4E3A <code>(i + k) % len</code> \u7684\u4F4D\u7F6E</p></li><li><p>\u591A\u6B21\u53CD\u8F6C\u3002</p></li></ol><ul><li>\u5148\u5168\u90E8\u53CD\u8F6C\uFF0C\u5C06\u5143\u7D20\u63D0\u5230\u6700\u524D\u9762\uFF1B</li><li>\u53CD\u8F6C\u524D\u534A\u90E8\u5206\uFF1B</li><li>\u53CD\u8F6C\u540E\u534A\u90E8\u5206\uFF1B</li></ul><h2 id="\u89E3\u7B54" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54" aria-hidden="true">#</a> \u89E3\u7B54</h2><p>\u4E34\u65F6\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">k</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span> Do not return anything, modify nums in-place instead.
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">rotate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">+</span> k<span class="token punctuation">)</span> <span class="token operator">%</span> len<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  nums<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u591A\u6B21\u53CD\u8F6C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    start <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    end <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">rotate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  k <span class="token operator">%=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token function">reverse</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reverse</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reverse</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> k<span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,17),k={href:"https://leetcode.cn/leetbook/read/top-interview-questions-easy/x2skh7/",target:"_blank",rel:"noopener noreferrer"},m=c("\u65CB\u8F6C\u6570\u7EC4");function b(d,h){const s=a("OutboundLink");return l(),p(t,null,[i,n("p",null,[n("a",k,[m,e(s)])])],64)}var g=u(r,[["render",b]]);export{g as default};
